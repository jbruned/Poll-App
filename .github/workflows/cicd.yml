# CI/CD pipeline for the project using GitHub Actions
name: CI/CD

on:
    push:
        branches: [ "**" ]
    pull_request:
        branches: [ "main" ]
jobs:
    linter:
        name: Linters  # Lint frontend and backend
        runs-on: ubuntu-latest  # Includes npm, docker and awscli as per the documentation
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Install dependencies
              run: make deps
            - name: Lint React app
              run: make linter-front
            - name: Lint Python app
              run: make linter-back
    test:
        name: Tests  # Run tests for frontend and backend
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Not implemented
              run: echo "This phase has not been implemented (yet)"
    build:
        name: Build  # Build frontend and Docker image
        runs-on: ubuntu-latest
        needs: [ linter, test ]
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Install dependencies
              run: make deps
            - name: Build React app
              run: make build-front
            - name: Build Docker image
              run: make build-image
            # Now we could directly upload the image, but we want to learn how to use artifacts
            # that can be uploaded in another job
            # - name: Save Docker image
            #   run: docker save -o docker-image.tar
            # - name: Compress Docker image
            #   run: gzip -c docker-image.tar > docker-image.tar.gz
            - name: Save Docker image
              run: make save-image
              env:
                FILE_NAME: "docker-image"
            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                name: docker-image
                path: ./docker-image.tar.gz
    publish:
        name: Publish  # Publish Docker image to AWS ECR
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            - name: Download artifact
              uses: actions/download-artifact@v2
              with:
                name: docker-image
                path: ./docker-image.tar.gz
            - name: Debug
              run: ls -l && ls -l docker-image.tar.gz
            - name: Decompress Docker image
              run: gzip -d docker-image.tar.gz -c > docker-image.tar
            - name: Load Docker image
              run: docker load -i docker-image.tar
            - name: Push image  # Tags the image, then logs in to AWS ECR and pushes it
              run: make push-ecr
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                AWS_REGION: us-west-2
                AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    deploy:
        name: Deploy  # Deploy to AWS ECS using Terraform
        runs-on: ubuntu-latest
        needs: [ publish ]
        steps:
            - name: Deploy ECR image
              run: echo "This phase has not been implemented (yet)"
